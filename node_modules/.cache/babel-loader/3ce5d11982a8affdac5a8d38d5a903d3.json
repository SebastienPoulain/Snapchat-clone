{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/SEBASTIEN/Desktop/Exercices Web/React/Projets/Snapchat/snapchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar}from\"@material-ui/core\";import React,{useEffect,useState}from\"react\";import\"./Chats.css\";import SearchIcon from\"@material-ui/icons/Search\";import ChatBubbleIcon from\"@material-ui/icons/ChatBubble\";import{auth,db}from\"./firebase\";import Chat from\"./Chat\";import{useSelector,useDispatch}from\"react-redux\";import{selectUser}from\"./features/appSlice\";import{useHistory}from\"react-router-dom\";import CameraAltIcon from\"@material-ui/icons/CameraAlt\";import{resetCameraImage}from\"./features/cameraSlice\";import{FireSQL}from\"firesql\";import firebase from\"firebase/app\";import\"firesql/rx\";import\"firebase/firestore\";function Chats(){var _useState=useState(\"none\"),_useState2=_slicedToArray(_useState,2),userNotFound=_useState2[0],setUserNotFound=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),personQuery=_useState6[0],setPersonQuery=_useState6[1];var user=useSelector(selectUser);var dispatch=useDispatch();var history=useHistory();useEffect(function(){getPosts();},[]);var takeSnap=function takeSnap(){dispatch(resetCameraImage());history.push(\"/capture\");};var getPosts=function getPosts(){db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){return setPosts(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});setPersonQuery(\"\");};var getPersonQuery=function getPersonQuery(e){e.preventDefault();var nameCapitalized=personQuery.charAt(0).toUpperCase()+personQuery.slice(1);if(personQuery!==\"\"){var fireSQL=new FireSQL(firebase.firestore());var persons=fireSQL.rxQuery(\"\\n  SELECT *\\n  FROM posts\\n  WHERE username LIKE '\".concat(personQuery,\"%' or username LIKE '\").concat(nameCapitalized,\"%'\\n  ORDER BY username, timestamp DESC\\n\"),{includeId:\"id\"});persons.subscribe(function(results){if(results.size!==0){setPosts(results.map(function(doc){return{id:doc.id,data:{username:doc.username,imageUrl:doc.imageUrl,profilePic:doc.profilePic,read:doc.read,timestamp:doc.timestamp}};}));}});}setUserNotFound(\"block\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chats__header\",children:[/*#__PURE__*/_jsx(Avatar,{src:user.profilePic,onClick:function onClick(){auth.signOut();},className:\"chats__avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chats__search\",children:[/*#__PURE__*/_jsx(SearchIcon,{onClick:getPosts,className:\"chats__searchIcon\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:getPersonQuery,children:/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return setPersonQuery(e.target.value);},value:personQuery,type:\"text\"})})]}),/*#__PURE__*/_jsx(ChatBubbleIcon,{className:\"chats__chatIcon\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chats__posts\",children:posts.length>0?posts.map(function(_ref){var id=_ref.id,_ref$data=_ref.data,profilePic=_ref$data.profilePic,username=_ref$data.username,timestamp=_ref$data.timestamp,imageUrl=_ref$data.imageUrl,read=_ref$data.read;return/*#__PURE__*/_jsx(Chat,{profilePic:profilePic,username:username,timestamp:timestamp,imageUrl:imageUrl,read:read,id:id},id);}):/*#__PURE__*/_jsx(\"h4\",{style:{display:\"\".concat(userNotFound)},children:\"l'utilisateur entr\\xE9 n'existe pas\"})}),/*#__PURE__*/_jsx(CameraAltIcon,{className:\"chats__takePicIcon\",onClick:takeSnap,fontSize:\"large\"})]});}export default Chats;","map":{"version":3,"sources":["C:/Users/SEBASTIEN/Desktop/Exercices Web/React/Projets/Snapchat/snapchat/src/Chats.js"],"names":["Avatar","React","useEffect","useState","SearchIcon","ChatBubbleIcon","auth","db","Chat","useSelector","useDispatch","selectUser","useHistory","CameraAltIcon","resetCameraImage","FireSQL","firebase","Chats","userNotFound","setUserNotFound","posts","setPosts","personQuery","setPersonQuery","user","dispatch","history","getPosts","takeSnap","push","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","getPersonQuery","e","preventDefault","nameCapitalized","charAt","toUpperCase","slice","fireSQL","firestore","persons","rxQuery","includeId","subscribe","results","size","username","imageUrl","profilePic","read","timestamp","signOut","target","value","length","display"],"mappings":"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","sourcesContent":["import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Chats.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport { auth, db } from \"./firebase\";\r\nimport Chat from \"./Chat\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser } from \"./features/appSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\r\nimport { resetCameraImage } from \"./features/cameraSlice\";\r\nimport { FireSQL } from \"firesql\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firesql/rx\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction Chats() {\r\n  const [userNotFound, setUserNotFound] = useState(\"none\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [personQuery, setPersonQuery] = useState(\"\");\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const takeSnap = () => {\r\n    dispatch(resetCameraImage());\r\n    history.push(\"/capture\");\r\n  };\r\n\r\n  const getPosts = () => {\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n    setPersonQuery(\"\");\r\n  };\r\n\r\n  const getPersonQuery = (e) => {\r\n    e.preventDefault();\r\n\r\n    const nameCapitalized =\r\n      personQuery.charAt(0).toUpperCase() + personQuery.slice(1);\r\n\r\n    if (personQuery !== \"\") {\r\n      const fireSQL = new FireSQL(firebase.firestore());\r\n      const persons = fireSQL.rxQuery(\r\n        `\r\n  SELECT *\r\n  FROM posts\r\n  WHERE username LIKE '${personQuery}%' or username LIKE '${nameCapitalized}%'\r\n  ORDER BY username, timestamp DESC\r\n`,\r\n        { includeId: \"id\" }\r\n      );\r\n\r\n      persons.subscribe((results) => {\r\n        if (results.size !== 0) {\r\n          setPosts(\r\n            results.map((doc) => ({\r\n              id: doc.id,\r\n              data: {\r\n                username: doc.username,\r\n                imageUrl: doc.imageUrl,\r\n                profilePic: doc.profilePic,\r\n                read: doc.read,\r\n                timestamp: doc.timestamp,\r\n              },\r\n            }))\r\n          );\r\n        }\r\n      });\r\n    }\r\n    setUserNotFound(\"block\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats__header\">\r\n        <Avatar\r\n          src={user.profilePic}\r\n          onClick={() => {\r\n            auth.signOut();\r\n          }}\r\n          className=\"chats__avatar\"\r\n        />\r\n        <div className=\"chats__search\">\r\n          <SearchIcon onClick={getPosts} className=\"chats__searchIcon\" />\r\n          <form onSubmit={getPersonQuery}>\r\n            <input\r\n              onChange={(e) => setPersonQuery(e.target.value)}\r\n              value={personQuery}\r\n              type=\"text\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <ChatBubbleIcon className=\"chats__chatIcon\" />\r\n      </div>\r\n\r\n      <div className=\"chats__posts\">\r\n        {posts.length > 0 ? (\r\n          posts.map(\r\n            ({\r\n              id,\r\n              data: { profilePic, username, timestamp, imageUrl, read },\r\n            }) => (\r\n              <Chat\r\n                key={id}\r\n                profilePic={profilePic}\r\n                username={username}\r\n                timestamp={timestamp}\r\n                imageUrl={imageUrl}\r\n                read={read}\r\n                id={id}\r\n              />\r\n            )\r\n          )\r\n        ) : (\r\n          <h4 style={{ display: `${userNotFound}` }}>\r\n            l'utilisateur entré n'existe pas\r\n          </h4>\r\n        )}\r\n      </div>\r\n      <CameraAltIcon\r\n        className=\"chats__takePicIcon\"\r\n        onClick={takeSnap}\r\n        fontSize=\"large\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}
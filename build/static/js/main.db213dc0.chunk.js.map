{"version":3,"sources":["features/cameraSlice.js","WebcamCapture.js","firebase.js","features/appSlice.js","Preview.js","Chat.js","Chats.js","ChatView.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["cameraSlice","createSlice","name","initialState","cameraImage","reducers","setCameraImage","state","action","payload","resetCameraImage","actions","selectCameraImage","camera","videoConstraints","width","height","facingMode","WebcamCapture","webcamRef","useRef","dispatch","useDispatch","history","useHistory","capture","useCallback","imageSrc","current","getScreenshot","push","className","audio","ref","screenshotFormat","fontSize","onClick","replace","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","provider","GoogleAuthProvider","appSlice","user","selectedImage","login","logout","selectImage","resetImage","selectUser","app","selectSelectedImage","Preview","useSelector","useEffect","src","alt","id","uuid","putString","on","error","console","log","child","getDownloadURL","then","url","collection","add","imageUrl","username","read","profilePic","timestamp","FieldValue","serverTimestamp","Chat","indexOf","doc","update","Avatar","interval","fromNow","Date","toDate","valueOf","Chats","useState","userNotFound","setUserNotFound","posts","setPosts","personQuery","setPersonQuery","getPosts","orderBy","onSnapshot","snapshot","docs","map","data","signOut","onSubmit","e","preventDefault","nameCapitalized","charAt","toUpperCase","slice","FireSQL","rxQuery","includeId","subscribe","results","size","placeholder","onChange","target","value","type","length","style","display","ChatView","exit","isPlaying","duration","strokeWidth","colors","remainingTime","Login","Button","variant","signInWithPopup","result","displayName","photoURL","uid","catch","alert","message","App","onAuthStateChanged","authUser","exact","path","configureStore","reducer","appReducer","cameraReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+ZAEaA,EAAcC,YAAY,CACrCC,KAAM,SACNC,aAAc,CACZC,YAAa,MAEfC,SAAU,CACRC,eAAgB,SAACC,EAAOC,GACtBD,EAAMH,YAAcI,EAAOC,SAE7BC,iBAAkB,SAACH,GACjBA,EAAMH,YAAc,S,EAK0BJ,EAAYW,QAAjDL,E,EAAAA,eAAgBI,E,EAAAA,iBAElBE,EAAoB,SAACL,GAAD,OAAWA,EAAMM,OAAOT,aAE1CJ,IAAf,Q,QCZMc,G,OAAmB,CACvBC,MAAO,IACPC,OAAQ,IACRC,WAAY,SA0CCC,MAvCf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAWC,cACXC,EAAUC,cAEVC,EAAUC,uBAAY,WAC1B,IAAMC,EAAWR,EAAUS,QAAQC,gBACnCR,EAASf,EAAeqB,IACxBJ,EAAQO,KAAK,cACZ,CAACX,IAMJ,OACE,sBAAKY,UAAU,gBAAf,UACE,cAAC,IAAD,CACEC,OAAO,EACPhB,OAAQF,EAAiBE,OACzBiB,IAAKd,EACLe,iBAAiB,aACjBnB,MAAOD,EAAiBC,MACxBD,iBAAkBA,IAEpB,cAAC,IAAD,CACEqB,SAAS,QACTJ,UAAU,sBACVK,QAjBO,WACXb,EAAQc,QAAQ,QAkBd,cAAC,IAAD,CACEN,UAAU,wBACVK,QAASX,EACTU,SAAS,c,oMCnCXG,EAFcC,IAASC,cATN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKcC,YAEjBC,EAAOT,IAASS,OAEhBC,EAAUV,IAASU,UAEnBC,EAAW,IAAIX,IAASS,KAAKG,mBCjBtBC,EAAWnD,YAAY,CAClCC,KAAM,MACNC,aAAc,CACZkD,KAAM,KACNC,cAAe,MAEjBjD,SAAU,CACRkD,MAAO,SAAChD,EAAOC,GACbD,EAAM8C,KAAO7C,EAAOC,SAEtB+C,OAAQ,SAACjD,GACPA,EAAM8C,KAAO,MAEfI,YAAa,SAAClD,EAAOC,GACnBD,EAAM+C,cAAgB9C,EAAOC,SAE/BiD,WAAY,SAACnD,GACXA,EAAM+C,cAAgB,S,EAK8BF,EAASzC,QAApD4C,E,EAAAA,MAAOC,E,EAAAA,OAAQC,G,EAAAA,YAEjBE,I,EAF8BD,WAEjB,SAACnD,GAAD,OAAWA,EAAMqD,IAAIP,OAElCQ,GAAsB,SAACtD,GAAD,OAAWA,EAAMqD,IAAIN,eAEzCF,KAAf,QCwDeU,OAnEf,WACE,IAAM1D,EAAc2D,YAAYnD,GAC1BW,EAAUC,cACVH,EAAWC,cACX+B,EAAOU,YAAYJ,IA0CzB,OAxCAK,qBAAU,WACH5D,GACHmB,EAAQc,QAAQ,cAEjB,CAACjC,EAAamB,IAqCf,sBAAKQ,UAAU,UAAf,UACE,cAAC,IAAD,CAAWA,UAAU,iBAAiBK,QApCrB,WACnBf,EAASX,QAoCP,sBAAKqB,UAAU,wBAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,qBAAKkC,IAAK7D,EAAa8D,IAAI,KAC3B,sBAAK9B,QA3CQ,WACf,IAAM+B,EAAKC,cACQnB,EAChBhB,IADgB,gBACHkC,IACbE,UAAUjE,EAAa,YACfkE,GACT,gBACA,MACA,SAACC,GACCC,QAAQC,IAAIF,MAEd,WACEtB,EACGhB,IAAI,SACJyC,MAAMP,GACNQ,iBACAC,MAAK,SAACC,GACLvC,EAAGwC,WAAW,SAASC,IAAI,CACzBC,SAAUH,EACVI,SAAU5B,EAAK4B,SACfC,KAAM,GACNC,WAAY9B,EAAK8B,WACjBC,UAAW7C,IAASQ,UAAUsC,WAAWC,oBAE3C/D,EAAQc,QAAQ,YAmBEN,UAAU,kBAAlC,UACE,yCACA,cAAC,IAAD,CAAUA,UAAU,6B,2IC9BbwD,OAvCf,YAAwE,IAAxDpB,EAAuD,EAAvDA,GAAIc,EAAmD,EAAnDA,SAAUG,EAAyC,EAAzCA,UAAWF,EAA8B,EAA9BA,KAAMF,EAAwB,EAAxBA,SAAUG,EAAc,EAAdA,WACjD9D,EAAWC,cACXC,EAAUC,cACV6B,EAAOU,YAAYJ,IAiBzB,OACE,sBAAKvB,QAhBM,YAC0B,IAAjC8C,EAAKM,QAAQnC,EAAK4B,WACpB5D,EAASoC,GAAYuB,IACrB1C,EAAGwC,WAAW,SACXW,IAAItB,GACJuB,OAAO,CACNR,KAAK,GAAD,oBAAMA,GAAN,CAAY7B,EAAK4B,aAEzB1D,EAAQO,KAAK,iBAEbT,EAASoC,GAAYuB,IACrBzD,EAAQO,KAAK,iBAKKC,UAAU,OAA9B,UACE,cAAC4D,GAAA,EAAD,CAAQ5D,UAAU,eAAekC,IAAKkB,IACtC,sBAAKpD,UAAU,aAAf,UACE,6BAAKkD,IACL,+BACoC,IAAjCC,EAAKM,QAAQnC,EAAK4B,WAAoB,uBACvC,cAAC,KAAD,CAAQW,SAAU,IAAMC,SAAO,EAA/B,SACG,IAAIC,KAAJ,OAASV,QAAT,IAASA,OAAT,EAASA,EAAWW,UAAUC,mBAIH,IAAjCd,EAAKM,QAAQnC,EAAK4B,WACjB,cAAC,KAAD,CAAiBlD,UAAU,uB,uDCmGpBkE,OA9Hf,WAAkB,IAAD,EACyBC,mBAAS,QADlC,oBACRC,EADQ,KACMC,EADN,OAEWF,mBAAS,IAFpB,oBAERG,EAFQ,KAEDC,EAFC,OAGuBJ,mBAAS,IAHhC,oBAGRK,EAHQ,KAGKC,EAHL,KAITnD,EAAOU,YAAYJ,IACnBtC,EAAWC,cACXC,EAAUC,cAEhBwC,qBAAU,WACRyC,MACC,IAEH,IAKMA,EAAW,WACfnE,EAAGwC,WAAW,SACX4B,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAAD,OACVN,EACEM,EAASC,KAAKC,KAAI,SAACrB,GAAD,MAAU,CAC1BtB,GAAIsB,EAAItB,GACR4C,KAAMtB,EAAIsB,eAIlBP,EAAe,KAyCjB,OACE,sBAAKzE,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC4D,GAAA,EAAD,CACE1B,IAAKZ,EAAK8B,WACV/C,QAAS,WACPY,EAAKgE,WAEPjF,UAAU,kBAEZ,sBAAKA,UAAU,gBAAf,UACE,cAAC,KAAD,CAAYK,QAASqE,EAAU1E,UAAU,sBACzC,sBAAMkF,SAlDS,SAACC,GACtBA,EAAEC,iBAEF,IAAMC,EACJb,EAAYc,OAAO,GAAGC,cAAgBf,EAAYgB,MAAM,GAEtC,KAAhBhB,GACc,IAAIiB,WAAQjF,KAASQ,aACb0E,QAAR,6DAIGlB,EAJH,gCAIsCa,EAJtC,6CAOd,CAAEM,UAAW,OAGPC,WAAU,SAACC,GACI,IAAjBA,EAAQC,MACVvB,EACEsB,EAAQd,KAAI,SAACrB,GAAD,MAAU,CACpBtB,GAAIsB,EAAItB,GACR4C,KAAM,CACJ9B,SAAUQ,EAAIR,SACdD,SAAUS,EAAIT,SACdG,WAAYM,EAAIN,WAChBD,KAAMO,EAAIP,KACVE,UAAWK,EAAIL,mBAO3BgB,EAAgB,UAeV,SACE,uBACE0B,YAAY,8BACZC,SAAU,SAACb,GAAD,OAAOV,EAAeU,EAAEc,OAAOC,QACzCA,MAAO1B,EACP2B,KAAK,cAIX,cAAC,KAAD,CAAgBnG,UAAU,uBAG5B,qBAAKA,UAAU,eAAf,SACGsE,EAAM8B,OAAS,EACd9B,EAAMS,KACJ,gBACE3C,EADF,EACEA,GADF,IAEE4C,KAAQ5B,EAFV,EAEUA,WAAYF,EAFtB,EAEsBA,SAAUG,EAFhC,EAEgCA,UAAWJ,EAF3C,EAE2CA,SAAUE,EAFrD,EAEqDA,KAFrD,OAIE,cAAC,GAAD,CAEEC,WAAYA,EACZF,SAAUA,EACVG,UAAWA,EACXJ,SAAUA,EACVE,KAAMA,EACNf,GAAIA,GANCA,MAWX,oBAAIiE,MAAO,CAAEC,QAAQ,GAAD,OAAKlC,IAAzB,mDAKJ,cAAC,KAAD,CACEpE,UAAU,qBACVK,QA3GW,WACff,EAASX,KACTa,EAAQO,KAAK,aA0GTK,SAAS,c,mBCnFFmG,OA9Cf,WACE,IAAMhF,EAAgBS,YAAYF,IAC5BtC,EAAUC,cAEhBwC,qBAAU,WACHV,GACHiF,MAED,CAACjF,IAEJ,IAAMiF,EAAO,WACXhH,EAAQc,QAAQ,MAGlB,OACE,sBAAKN,UAAU,WAAf,UACE,qBAAKkC,IAAKX,EAAeY,IAAI,KAC7B,cAAC,IAAD,CACE/B,SAAS,QACTJ,UAAU,iBACVK,QAASmG,IAEX,qBAAKxG,UAAU,kBAAf,SACE,cAAC,wBAAD,CACEyG,WAAS,EACTC,SAAU,GACVC,YAAa,EACbb,KAAM,GACNc,OAAQ,CACN,CAAC,UAAW,KACZ,CAAC,UAAW,KACZ,CAAC,UAAW,MARhB,SAWG,YAAwB,IAArBC,EAAoB,EAApBA,cAIF,OAHsB,IAAlBA,GACFL,IAEKK,W,iBCTJC,OA9Bf,WACE,IAAMxH,EAAWC,cAiBjB,OACE,qBAAKS,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKkC,IAAI,sDAAsDC,IAAI,KACnE,cAAC4E,GAAA,EAAD,CAAQC,QAAQ,WAAW3G,QAnBlB,WACbY,EACGgG,gBAAgB9F,GAChB0B,MAAK,SAACqE,GACL5H,EACEkC,EAAM,CACJ0B,SAAUgE,EAAO5F,KAAK6F,YACtB/D,WAAY8D,EAAO5F,KAAK8F,SACxBhF,GAAI8E,EAAO5F,KAAK+F,UAIrBC,OAAM,SAAC9E,GAAD,OAAW+E,MAAM/E,EAAMgF,aAO5B,gCCwCOC,OAzDf,WACE,IAAMnG,EAAOU,YAAYJ,IACnBtC,EAAWC,cAkBjB,OAhBA0C,qBAAU,WACRhB,EAAKyG,oBAAmB,SAACC,GAErBrI,EADEqI,EAEAnG,EAAM,CACJ0B,SAAUyE,EAASR,YACnB/D,WAAYuE,EAASP,SACrBhF,GAAIuF,EAASN,MAIR5F,UAGZ,IAGD,qBAAKzB,UAAU,MAAf,SACE,cAAC,IAAD,UACIsB,EAGA,qCACE,qBACEY,IAAI,0EACJC,IAAI,GACJnC,UAAU,cAEZ,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4H,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,gBArBV,cAAC,GAAD,SChCKC,eAAe,CAC5BC,QAAS,CACPlG,IAAKmG,GACLlJ,OAAQmJ,KCKQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlG,MAAK,SAAAmG,GACjCA,EAAaC,kB","file":"static/js/main.db213dc0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const cameraSlice = createSlice({\r\n  name: \"camera\",\r\n  initialState: {\r\n    cameraImage: null,\r\n  },\r\n  reducers: {\r\n    setCameraImage: (state, action) => {\r\n      state.cameraImage = action.payload;\r\n    },\r\n    resetCameraImage: (state) => {\r\n      state.cameraImage = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCameraImage, resetCameraImage } = cameraSlice.actions;\r\n\r\nexport const selectCameraImage = (state) => state.camera.cameraImage;\r\n\r\nexport default cameraSlice.reducer;\r\n","import React, { useRef, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Webcam from \"react-webcam\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { setCameraImage } from \"./features/cameraSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./WebcamCapture.css\";\r\n\r\nconst videoConstraints = {\r\n  width: 250,\r\n  height: 400,\r\n  facingMode: \"user\",\r\n};\r\n\r\nfunction WebcamCapture() {\r\n  const webcamRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    dispatch(setCameraImage(imageSrc));\r\n    history.push(\"/preview\");\r\n  }, [webcamRef]);\r\n\r\n  const back = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"webcamCapture\">\r\n      <Webcam\r\n        audio={false}\r\n        height={videoConstraints.height}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={videoConstraints.width}\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      <ArrowBackIcon\r\n        fontSize=\"large\"\r\n        className=\"webcamCapture__back\"\r\n        onClick={back}\r\n      />\r\n      <AddAPhotoIcon\r\n        className=\"webcamCapture__button\"\r\n        onClick={capture}\r\n        fontSize=\"large\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebcamCapture;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD3ICycjZ_lNX3JXf3TOdZtt1VSCGSNzxA\",\r\n  authDomain: \"snapchat-83f2c.firebaseapp.com\",\r\n  projectId: \"snapchat-83f2c\",\r\n  storageBucket: \"snapchat-83f2c.appspot.com\",\r\n  messagingSenderId: \"524917382890\",\r\n  appId: \"1:524917382890:web:61b4e5e9328a095ec7c193\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nconst auth = firebase.auth();\r\n\r\nconst storage = firebase.storage();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, storage, provider };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    user: null,\r\n    selectedImage: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n    selectImage: (state, action) => {\r\n      state.selectedImage = action.payload;\r\n    },\r\n    resetImage: (state) => {\r\n      state.selectedImage = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, selectImage, resetImage } = appSlice.actions;\r\n\r\nexport const selectUser = (state) => state.app.user;\r\n\r\nexport const selectSelectedImage = (state) => state.app.selectedImage;\r\n\r\nexport default appSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { resetCameraImage, selectCameraImage } from \"./features/cameraSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Preview.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport CropIcon from \"@material-ui/icons/Crop\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { db, storage } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { selectUser } from \"./features/appSlice\";\r\n\r\nfunction Preview() {\r\n  const cameraImage = useSelector(selectCameraImage);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n\r\n  useEffect(() => {\r\n    if (!cameraImage) {\r\n      history.replace(\"/capture\");\r\n    }\r\n  }, [cameraImage, history]);\r\n\r\n  const closePreview = () => {\r\n    dispatch(resetCameraImage());\r\n  };\r\n\r\n  const sendPost = () => {\r\n    const id = uuid();\r\n    const uploadTask = storage\r\n      .ref(`posts/${id}`)\r\n      .putString(cameraImage, \"data_url\");\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      null,\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"posts\")\r\n          .child(id)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection(\"posts\").add({\r\n              imageUrl: url,\r\n              username: user.username,\r\n              read: [],\r\n              profilePic: user.profilePic,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            history.replace(\"/\");\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"preview\">\r\n      <CloseIcon className=\"preview__close\" onClick={closePreview} />\r\n      <div className=\"preview__toolbarRight\">\r\n        <TextFieldsIcon />\r\n        <CreateIcon />\r\n        <NoteIcon />\r\n        <MusicNoteIcon />\r\n        <AttachFileIcon />\r\n        <CropIcon />\r\n        <TimerIcon />\r\n      </div>\r\n      <img src={cameraImage} alt=\"\" />\r\n      <div onClick={sendPost} className=\"preview__footer\">\r\n        <h2>Envoyer</h2>\r\n        <SendIcon className=\"preview__sendIcon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Chat.css\";\r\nimport StopRoundedIcon from \"@material-ui/icons/StopRounded\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment/locale/fr\";\r\nimport { selectImage, selectUser } from \"./features/appSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { db } from \"./firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Chat({ id, username, timestamp, read, imageUrl, profilePic }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector(selectUser);\r\n\r\n  const open = () => {\r\n    if (read.indexOf(user.username) === -1) {\r\n      dispatch(selectImage(imageUrl));\r\n      db.collection(\"posts\")\r\n        .doc(id)\r\n        .update({\r\n          read: [...read, user.username],\r\n        });\r\n      history.push(\"/chats/view\");\r\n    } else {\r\n      dispatch(selectImage(imageUrl));\r\n      history.push(\"/chats/view\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={open} className=\"chat\">\r\n      <Avatar className=\"chat__avatar\" src={profilePic} />\r\n      <div className=\"chat__info\">\r\n        <h4>{username}</h4>\r\n        <p>\r\n          {read.indexOf(user.username) === -1 && \"Cliquez pour voir - \"}\r\n          <Moment interval={1000} fromNow>\r\n            {new Date(timestamp?.toDate()).valueOf()}\r\n          </Moment>\r\n        </p>\r\n      </div>\r\n      {read.indexOf(user.username) === -1 && (\r\n        <StopRoundedIcon className=\"chat__readIcon\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Chats.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport { auth, db } from \"./firebase\";\r\nimport Chat from \"./Chat\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser } from \"./features/appSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\r\nimport { resetCameraImage } from \"./features/cameraSlice\";\r\nimport { FireSQL } from \"firesql\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firesql/rx\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction Chats() {\r\n  const [userNotFound, setUserNotFound] = useState(\"none\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [personQuery, setPersonQuery] = useState(\"\");\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const takeSnap = () => {\r\n    dispatch(resetCameraImage());\r\n    history.push(\"/capture\");\r\n  };\r\n\r\n  const getPosts = () => {\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n    setPersonQuery(\"\");\r\n  };\r\n\r\n  const getPersonQuery = (e) => {\r\n    e.preventDefault();\r\n\r\n    const nameCapitalized =\r\n      personQuery.charAt(0).toUpperCase() + personQuery.slice(1);\r\n\r\n    if (personQuery !== \"\") {\r\n      const fireSQL = new FireSQL(firebase.firestore());\r\n      const persons = fireSQL.rxQuery(\r\n        `\r\n  SELECT *\r\n  FROM posts\r\n  WHERE username LIKE '${personQuery}%' or username LIKE '${nameCapitalized}%'\r\n  ORDER BY username, timestamp DESC\r\n`,\r\n        { includeId: \"id\" }\r\n      );\r\n\r\n      persons.subscribe((results) => {\r\n        if (results.size !== 0) {\r\n          setPosts(\r\n            results.map((doc) => ({\r\n              id: doc.id,\r\n              data: {\r\n                username: doc.username,\r\n                imageUrl: doc.imageUrl,\r\n                profilePic: doc.profilePic,\r\n                read: doc.read,\r\n                timestamp: doc.timestamp,\r\n              },\r\n            }))\r\n          );\r\n        }\r\n      });\r\n    }\r\n    setUserNotFound(\"block\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats__header\">\r\n        <Avatar\r\n          src={user.profilePic}\r\n          onClick={() => {\r\n            auth.signOut();\r\n          }}\r\n          className=\"chats__avatar\"\r\n        />\r\n        <div className=\"chats__search\">\r\n          <SearchIcon onClick={getPosts} className=\"chats__searchIcon\" />\r\n          <form onSubmit={getPersonQuery}>\r\n            <input\r\n              placeholder=\"Utilisateur à rechercher\"\r\n              onChange={(e) => setPersonQuery(e.target.value)}\r\n              value={personQuery}\r\n              type=\"text\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <ChatBubbleIcon className=\"chats__chatIcon\" />\r\n      </div>\r\n\r\n      <div className=\"chats__posts\">\r\n        {posts.length > 0 ? (\r\n          posts.map(\r\n            ({\r\n              id,\r\n              data: { profilePic, username, timestamp, imageUrl, read },\r\n            }) => (\r\n              <Chat\r\n                key={id}\r\n                profilePic={profilePic}\r\n                username={username}\r\n                timestamp={timestamp}\r\n                imageUrl={imageUrl}\r\n                read={read}\r\n                id={id}\r\n              />\r\n            )\r\n          )\r\n        ) : (\r\n          <h4 style={{ display: `${userNotFound}` }}>\r\n            l'utilisateur entré n'existe pas\r\n          </h4>\r\n        )}\r\n      </div>\r\n      <CameraAltIcon\r\n        className=\"chats__takePicIcon\"\r\n        onClick={takeSnap}\r\n        fontSize=\"large\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./ChatView.css\";\r\nimport { selectSelectedImage } from \"./features/appSlice\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nfunction ChatView() {\r\n  const selectedImage = useSelector(selectSelectedImage);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!selectedImage) {\r\n      exit();\r\n    }\r\n  }, [selectedImage]);\r\n\r\n  const exit = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatView\">\r\n      <img src={selectedImage} alt=\"\" />\r\n      <ArrowBackIcon\r\n        fontSize=\"large\"\r\n        className=\"chatView__back\"\r\n        onClick={exit}\r\n      />\r\n      <div className=\"chatView__timer\">\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={10}\r\n          strokeWidth={6}\r\n          size={50}\r\n          colors={[\r\n            [\"#004777\", 0.33],\r\n            [\"#F7B801\", 0.33],\r\n            [\"#A30000\", 0.33],\r\n          ]}\r\n        >\r\n          {({ remainingTime }) => {\r\n            if (remainingTime === 0) {\r\n              exit();\r\n            }\r\n            return remainingTime;\r\n          }}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatView;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { login } from \"./features/appSlice\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch(\r\n          login({\r\n            username: result.user.displayName,\r\n            profilePic: result.user.photoURL,\r\n            id: result.user.uid,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img src=\"https://scx2.b-cdn.net/gfx/news/2017/1-snapchat.jpg\" alt=\"\" />\r\n        <Button variant=\"outlined\" onClick={signIn}>\r\n          Se connecter\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport WebcamCapture from \"./WebcamCapture\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Preview from \"./Preview\";\r\nimport Chats from \"./Chats\";\r\nimport ChatView from \"./ChatView\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout, login, selectUser } from \"./features/appSlice\";\r\nimport Login from \"./Login\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        dispatch(\r\n          login({\r\n            username: authUser.displayName,\r\n            profilePic: authUser.photoURL,\r\n            id: authUser.uid,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <img\r\n              src=\"https://lakeridgenewsonline.com/wp-content/uploads/2020/04/snapchat.jpg\"\r\n              alt=\"\"\r\n              className=\"app__logo\"\r\n            />\r\n            <div className=\"app__body\">\r\n              <div className=\"app__bodyBackground\">\r\n                <Switch>\r\n                  <Route exact path=\"/preview\">\r\n                    <Preview />\r\n                  </Route>\r\n                  <Route exact path=\"/chats/view\">\r\n                    <ChatView />\r\n                  </Route>\r\n                  <Route exact path=\"/\">\r\n                    <Chats />\r\n                  </Route>\r\n                  <Route exact path=\"/capture\">\r\n                    <WebcamCapture />\r\n                  </Route>\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"../features/appSlice\";\r\nimport cameraReducer from \"../features/cameraSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    camera: cameraReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}